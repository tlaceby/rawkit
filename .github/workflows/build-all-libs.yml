name: rawkit • build static libs

on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  VERSION: ${{ github.ref_name }}

jobs:
# ──────────────────────────────────────────────────────────────
# Build matrix (Linux + macOS)
# ──────────────────────────────────────────────────────────────
  build:
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-latest, macos-latest]        # , windows-latest
        arch: [amd64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # Linux toolchain
      - name: Install Linux build deps
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y build-essential zlib1g-dev
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          fi

      # Build
      - name: Build rawkit (${{ matrix.os }} • ${{ matrix.arch }})
        if: runner.os != 'Windows'
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu*) bash scripts/build_linux.sh  "${VERSION}" "${{ matrix.arch }}";;
            macos*)  bash scripts/build_darwin.sh "${VERSION}" "${{ matrix.arch }}";;
          esac

      # Upload artefact for this OS/arch
      - uses: actions/upload-artifact@v4
        with:
          name: libs-${{ matrix.os }}-${{ matrix.arch }}
          path: libs/**/${{ env.VERSION }}/libraw*.a

# ──────────────────────────────────────────────────────────────
# Release job (single run after all matrix builds)
# ──────────────────────────────────────────────────────────────
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      # bring repo (with .git) into workspace
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: false

      # download artefacts from matrix builds
      - uses: actions/download-artifact@v4
        with:
          path: dist

      # re-assemble libs/ tree, fail if nothing found
      - name: Re-assemble repo hierarchy
        shell: bash
        run: |
          set -e
          shopt -s globstar nullglob
          count=0
          for f in dist/**/libraw*.a; do
            echo "• found $f"
            count=$((count+1))

            # turn 'dist/libs-ubuntu-latest-amd64/…' into linux_amd64
            osarch=${f#dist/libs-}
            osarch=${osarch%%/*}            # ubuntu-latest-amd64
            os=${osarch%-latest-*}          # ubuntu | macos
            arch=${osarch##*-}              # amd64  | arm64
            [[ $os == ubuntu ]] && os=linux
            [[ $os == macos  ]] && os=darwin

            version_dir="libs/${os}_${arch}/${VERSION}"
            current_dir="libs/${os}_${arch}/current"
            mkdir -p "$version_dir" "$current_dir"
            cp "$f" "$version_dir/"
            cp "$f" "$current_dir/"
          done

          if [[ $count -eq 0 ]]; then
            echo "‼️  No artefacts copied; aborting release."
            exit 1
          fi

      # commit only current/ folders
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "chore: update static libs for ${VERSION}"
          file_pattern: libs/*/current/**
          add_options: '-f'

      # upload all current/ libs as release assets (glob)
      - name: Upload static libs to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: RawKit ${{ github.ref_name }}
          files: |
            libs/linux_amd64/current/libraw.a#libraw-linux-amd64.a
            libs/linux_amd64/current/libraw_wrapper.a#libraw_wrapper-linux-amd64.a
            libs/linux_arm64/current/libraw.a#libraw-linux-arm64.a
            libs/linux_arm64/current/libraw_wrapper.a#libraw_wrapper-linux-arm64.a
            libs/darwin_amd64/current/libraw.a#libraw-darwin-amd64.a
            libs/darwin_amd64/current/libraw_wrapper.a#libraw_wrapper-darwin-amd64.a
            libs/darwin_arm64/current/libraw.a#libraw-darwin-arm64.a
            libs/darwin_arm64/current/libraw_wrapper.a#libraw_wrapper-darwin-arm64.a

