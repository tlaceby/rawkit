name: rawkit • build static libs
on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  VERSION: ${{ github.ref_name }}

jobs:
# ──────────────────────────────────────────────
# Build matrix (Linux + macOS)
# ──────────────────────────────────────────────
  build:
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-latest, macos-latest]   # , windows-latest
        arch: [amd64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # Linux toolchain
      - name: Install Linux build deps
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y build-essential zlib1g-dev
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          fi

      # Build
      - name: Build rawkit (${{ matrix.os }} • ${{ matrix.arch }})
        if: runner.os != 'Windows'
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu*) bash scripts/build_linux.sh  "${VERSION}" "${{ matrix.arch }}";;
            macos*)  bash scripts/build_darwin.sh "${VERSION}" "${{ matrix.arch }}";;
          esac

      # Upload artefacts
      - uses: actions/upload-artifact@v4
        with:
          name: libs-${{ matrix.os }}-${{ matrix.arch }}
          path: libs/**/${{ env.VERSION }}/libraw*.a

# ──────────────────────────────────────────────
# Release job
# ──────────────────────────────────────────────
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: false

      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Re-assemble repo hierarchy
        shell: bash
        run: |
          shopt -s globstar nullglob
          for f in dist/**/libraw*.a; do
            # dist/libs-ubuntu-latest-amd64 -> ubuntu-latest-amd64
            osarch=${f#dist/libs-}
            osarch=${osarch%%/*}
            os=${osarch%-latest-*}          # ubuntu | macos
            arch=${osarch##*-}              # amd64 | arm64

            # map to directory names used by CGO
            case "$os" in
              ubuntu) os=linux ;;
              macos)  os=darwin ;;
            esac

            version_dir="libs/${os}_${arch}/${VERSION}"
            current_dir="libs/${os}_${arch}/current"

            mkdir -p "$version_dir" "$current_dir"
            cp "$f" "$version_dir/"
            cp "$f" "$current_dir/"
          done

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "chore: update static libs for ${VERSION}"
          file_pattern: |
            libs/*/*/current
            libs/*/*/${{ env.VERSION }}/*

      - name: Upload static libs to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: RawKit ${{ github.ref_name }}
          files: |
            libs/linux_amd64/current/libraw*.a
            libs/linux_arm64/current/libraw*.a
            libs/darwin_amd64/current/libraw*.a
            libs/darwin_arm64/current/libraw*.a
            