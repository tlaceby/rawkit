name: rawkit â€¢ build static libs

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
    # --- checkout (no submodules needed now) ---------------------
    - uses: actions/checkout@v4

    - run: echo "VERSION=${GITHUB_REF_NAME}" >> "$GITHUB_ENV"

    # --- Linux deps ----------------------------------------------
    - if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y build-essential zlib1g-dev
        [[ "${{ matrix.arch }}" == "arm64" ]] && \
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu || true

    # --- Windows deps (MSYS2) ------------------------------------
    - if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-make
          mingw-w64-x86_64-pkgconf
          mingw-w64-x86_64-zlib

    # --- build ---------------------------------------------------
    - name: Build rawkit ${{ matrix.os }} ${{ matrix.arch }}
      shell: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          msys2 {0}
        else
          bash {0}
        fi
      run: |
        case "${{ matrix.os }}" in
          ubuntu*)  bash scripts/build_linux.sh        "$VERSION" "${{ matrix.arch }}";;
          macos*)   bash scripts/build_darwin.sh       "$VERSION" "${{ matrix.arch }}";;
          windows*) bash scripts/build_windows_mingw.sh "$VERSION";;
        esac

    - uses: actions/upload-artifact@v4
      with:
        name: libs-${{ matrix.os }}-${{ matrix.arch }}
        path: libs/**/$VERSION/libraw*.a
