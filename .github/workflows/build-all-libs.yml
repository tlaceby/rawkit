name: rawkit • build static libs

on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  VERSION: ${{ github.ref_name }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64
    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v4


    - name: Install Linux build deps
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y build-essential zlib1g-dev
        if [[ "${{ matrix.arch }}" == "arm64" ]]; then
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        fi


    - name: Install MSYS2 toolchain
      if: ${{ matrix.os == 'windows-latest' }}
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          make
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-pkgconf
          mingw-w64-x86_64-zlib

    - name: Build rawkit (${{ matrix.os }} • ${{ matrix.arch }})
      if: runner.os != 'Windows'
      shell: bash
      run: |
        case "${{ matrix.os }}" in
          ubuntu*) bash scripts/build_linux.sh  "${VERSION}" "${{ matrix.arch }}";;
          macos*)  bash scripts/build_darwin.sh "${VERSION}" "${{ matrix.arch }}";;
        esac


    - name: Build rawkit (windows • ${{ matrix.arch }})
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        bash scripts/build_windows_mingw.sh "${VERSION}"

    - uses: actions/upload-artifact@v4
      with:
        name: libs-${{ matrix.os }}-${{ matrix.arch }}
        path: libs/**/${{ env.VERSION }}/libraw*.a

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Re-assemble repo hierarchy
        shell: bash
        run: |
          for f in dist/**/libraw*.a; do
            dir=$(dirname "$f")                 # dist/libs-ubuntu-latest-amd64
            osarch=${dir#dist/libs-}            # ubuntu-latest-amd64
            os=${osarch%-latest-*}              # ubuntu
            arch=${osarch##*-}                  # amd64
            tgt="libs/${os}_${arch}/${VERSION}"
            mkdir -p "$tgt"
            cp "$f" "$tgt/"
            ln -snf "$VERSION" "libs/${os}_${arch}/current"
          done

      - name: Commit refreshed libs/current
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "chore: update static libs for ${VERSION}"
          file_pattern: |
            libs/*/*/current
            libs/*/*/${{ env.VERSION }}/libraw*.a

      - name: Upload static libs to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: RawKit ${{ github.ref_name }}
          files: |
            libs/linux_amd64/${{ env.VERSION }}/libraw*.a
            libs/linux_arm64/${{ env.VERSION }}/libraw*.a
            libs/darwin_amd64/${{ env.VERSION }}/libraw*.a
            libs/darwin_arm64/${{ env.VERSION }}/libraw*.a
            libs/windows_amd64/${{ env.VERSION }}/libraw*.a
