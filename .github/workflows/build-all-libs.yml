name: rawkit â€¢ build static libs

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: echo "VERSION=${GITHUB_REF_NAME}" >> "$GITHUB_ENV"

      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y build-essential autoconf automake libtool \
                                  pkg-config zlib1g-dev
          [[ "${{ matrix.arch }}" == "arm64" ]] && \
            sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu || true

      - if: matrix.os == 'macos-latest'
        run: brew install autoconf automake libtool

      - name: Build rawkit ${{ matrix.os }} ${{ matrix.arch }}
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu*)  bash scripts/build_linux.sh        "${VERSION}" "${{ matrix.arch }}";;
            macos*)   bash scripts/build_darwin.sh       "${VERSION}" "${{ matrix.arch }}";;
            windows*) bash scripts/build_windows_mingw.sh "${VERSION}"                    ;;
          esac

      - uses: actions/upload-artifact@v4
        with:
          name: libs-${{ matrix.os }}-${{ matrix.arch }}
          path: libs/**/${{ env.VERSION }}/libraw*.a

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Re-assemble repo hierarchy
        run: |
          VERSION="${GITHUB_REF_NAME}"
          for f in $(find dist -name 'libraw*.a'); do
            dir=$(dirname "$f")                # dist/libs-ubuntu-latest-amd64
            osarch=${dir#dist/libs-}           # ubuntu-latest-amd64
            os=${osarch%-latest-*}             # ubuntu
            arch=${osarch##*-}                 # amd64
            tgt="libs/${os}_${arch}/${VERSION}"
            mkdir -p "$tgt"
            cp "$f" "$tgt/"
            ln -snf "$VERSION" "libs/${os}_${arch}/current"
          done

      - name: Commit refreshed libs/current
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update static libs for ${GITHUB_REF_NAME}"
          branch: main
          file_pattern: |
            libs/*/*/current
            libs/*/*/${{ github.ref_name }}/libraw*.a

      - name: Upload static libs to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: RawKit ${{ github.ref_name }}
          files: |
            libs/linux_amd64/${{ github.ref_name }}/libraw*.a
            libs/linux_arm64/${{ github.ref_name }}/libraw*.a
            libs/darwin_amd64/${{ github.ref_name }}/libraw*.a
            libs/darwin_arm64/${{ github.ref_name }}/libraw*.a
            libs/windows_amd64/${{ github.ref_name }}/libraw*.a
